pipeline {
    agent {
        docker {
            image 'node:lts-alpine'
        }
    }

    environment {
        JEST_JUNIT_OUTPUT = 'jest-junit.xml'
        REPORTS_DIR = 'coverage'
        WORKDIR = './project'
    }

    stages {
        stage('Audit Tools') {
            steps {
                sh '''
                    echo "Auditing tools..."
                    node --version
                    npm --version
                '''

                sh 'printenv'
                sh 'ls -l $WORKSPACE'

            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${WORKDIR}") {
                    sh 'npm ci'
                }
            }
        }

        stage('Build') {
            steps {
                dir("${WORKDIR}") {
                    sh 'npm run build'
                }
            }
        }

        stage('Test') {
            steps {
                // Run Jest with coverage and JUnit output for reporting
                dir("${WORKDIR}") {
                    sh '''
                        npm run test -- \
                        --coverage \
                        --reporters=default \
                        --reporters=jest-junit
                    '''
                }

            }
        }

        stage('Publish Test Results') {
            steps {
                dir("${WORKDIR}") {
                    junit '${JEST_JUNIT_OUTPUT}'

                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: "${REPORTS_DIR}/lcov-report",
                        reportFiles: 'index.html',
                        reportName: 'Jest Coverage Report'
                    ])
                }

            }
        }

    }

    post {
        always {
            echo 'Build completed. Cleaning up workspace...'
            cleanWs()
        }

        success {
            echo 'Build succeeded!'
        }

        failure {
            echo 'Build failed!'
        }
    }
}
